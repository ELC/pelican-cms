# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = 'Pelican-CMS'
copyright = '2019, Ezequiel Leonardo Castaño'
author = 'Ezequiel Leonardo Castaño'

# The short X.Y version
version = ''
# The full version, including alpha/beta/rc tags
release = ''


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx_autodoc_typehints',
    'sphinx.ext.doctest',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.ifconfig',
    'sphinx.ext.viewcode',
    'sphinx_sitemap',
    'releases',
]

releases_issue_uri = "https://github.com/ELC/pelican-cms/issues/%s"
releases_release_uri = "https://github.com/ELC/pelican-cms/tree/%s"


html_baseurl = 'https://pelican-cms.readthedocs.io/en/latest/'

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.

from pygments.style import Style
from pygments.token import Token, Comment, Name, Keyword, Generic, Number, Operator, String

class GruvboxStyle(Style):
    """ Retro groove color scheme for Vim by Github: @morhetz """

    background_color = '#282828'
    styles = {
        Comment.Preproc:    'noinherit #8ec07c',
        Comment:            '#928374 italic',
        Generic.Deleted:    'noinherit #282828 bg:#fb4934',
        Generic.Emph:       '#83a598 underline',
        Generic.Error:      'bg:#fb4934 bold',
        Generic.Heading:    '#b8bb26 bold',
        Generic.Inserted:   'noinherit #282828 bg:#b8bb26',
        Generic.Output:     'noinherit #504945',
        Generic.Prompt:     '#ebdbb2',
        Generic.Strong:     '#ebdbb2',
        Generic.Subheading: '#b8bb26 bold',
        Generic.Traceback:  'bg:#fb4934 bold',
        Generic:            '#ebdbb2',
        Keyword.Type:       'noinherit #fabd2f',
        Keyword:            'noinherit #fe8019',
        Name.Attribute:     '#b8bb26 bold',
        Name.Builtin:       '#fabd2f',
        Name.Constant:      'noinherit #d3869b',
        Name.Entity:        'noinherit #fabd2f',
        Name.Exception:     'noinherit #fb4934',
        Name.Function:      '#fabd2f',
        Name.Label:         'noinherit #fb4934',
        Name.Tag:           'noinherit #fb4934',
        Name.Variable:      'noinherit #ebdbb2',
        Name:               '#ebdbb2',
        Number.Float:       'noinherit #d3869b',
        Number:             'noinherit #d3869b',
        Operator:           '#fe8019',
        String.Symbol:      '#83a598',
        String:             'noinherit #b8bb26',
        Token:              'noinherit #ebdbb2 bg:#282828',
    }

def pygments_monkeypatch_style(mod_name, cls):
    import sys
    import pygments.styles
    cls_name = cls.__name__
    mod = type(__import__("os"))(mod_name)
    setattr(mod, cls_name, cls)
    setattr(pygments.styles, mod_name, mod)
    sys.modules["pygments.styles." + mod_name] = mod
    from pygments.styles import STYLE_MAP
    STYLE_MAP[mod_name] = mod_name + "::" + cls_name


pygments_monkeypatch_style("gruvbox", GruvboxStyle)

pygments_style = "gruvbox"

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'Pelican-CMSdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'Pelican-CMS.tex', 'Pelican-CMS Documentation',
     'Ezequiel Leonardo Castaño', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'pelican-cms', 'Pelican-CMS Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'Pelican-CMS', 'Pelican-CMS Documentation',
     author, 'Pelican-CMS', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Extension configuration -------------------------------------------------

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True